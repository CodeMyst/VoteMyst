@inject DatabaseHelperProvider DatabaseHelpers

@using VoteMyst.Database
@using VoteMyst.Database.Models
@using VoteMyst.Controllers;

@model Event
@{
    ViewData["Title"] = "Event";
    Layout = "_Layout";

    EventState eventState = Model.GetCurrentState();
}

@section ContentMeta
{
    <meta property="og:title" content="@Model.Title" />
    <meta property="og:description" content="@Model.Description" />
    <meta property="og:image" content="/img/trophy.png" />
}

<h1>@Model.Title</h1>

@if (eventState == EventState.Ongoing)
{
    <p>
        Submissions are open! Click
        <a asp-controller="submit" asp-action="index" asp-route-id="@Model.EventId">here</a>
        to submit an entry!
    </p>

    <div class="posts">
        @foreach (var e in DatabaseHelpers.Entries.GetEntriesInEvent(Model))
        {
            <partial name="_Entry" for="@e" />
        }
    </div>
}
@if (eventState == EventState.Closed)
{
    EventsController.Leaderboard leaderboard = EventsController.Leaderboard.FromEvent(Model, DatabaseHelpers);

    <div class="leaderboard">
        @{
            int currentPlace = 0;
            int currentVotes = -1;
        }
        @foreach (var place in leaderboard)
        {
            if (place.Votes != currentVotes) {
                currentPlace++;
                currentVotes = place.Votes;
            }
            Entry entry = place.Entry;

            <div class="@(currentPlace <= 3 ? "top-3" : "")">
                @if (currentPlace <= 3) 
                {
                    <img class="place" src="/img/place-@(currentPlace).png" />
                }
                else 
                {
                    <p class="place">@(currentPlace).</p>
                }
                <partial name="_Entry" for="@entry" />
            </div>
        }
    </div>
}