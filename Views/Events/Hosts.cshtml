@inject DatabaseHelperProvider DatabaseHelpers

@model Event
@{
    ViewData["Title"] = Model.Title;
    Layout = "_Layout";

    UserAccount currentUser = ViewBag.UserAccount;
    IEnumerable<UserAccount> hosts = DatabaseHelpers.Events.GetEventHosts(Model);

    EventViewModel eventViewModel = new EventViewModel(Model, ViewBag.UserAccount, DatabaseHelpers);
}

<partial name="_EventPageHeader" for="@eventViewModel" />

<h1>Event Hosts</h1>

<form class="inline-form" autocomplete="off">
    <label for="userDisplayId">User Display ID:</label>
    <input type="text" id="userDisplayId" name="userDisplayId" />
    <a class="button" onclick="addHost('@Model.DisplayID', document.getElementById('userDisplayId').value)">Add Host</a>
</form>
<p class="note" style="color: var(--color-error)" id="addHostNote"></p>

<hr>

@foreach (UserAccount host in hosts)
{
<div class="event-host">
    <input type="hidden" name="userDisplayId" value="@host.DisplayID" />
    <a class="user-info event-host" href="@host.GetUrl()">
        <partial name="_Avatar" for="@host" />
        <p>@host.Username</p>
    </a>
    @if (host.ID != currentUser.ID)
    {
        <a class="button thin danger" onclick="removeHost('@Model.DisplayID', this.parentElement.querySelector('input').value)">Remove Host</a>
    }
</div>
}