@inject DatabaseHelperProvider DatabaseHelpers

@model Dictionary<EventState, Event[]>
@{
    ViewData["Title"] = "Browse";
    Layout = "_Layout";

    UserAccount currentUser = ViewBag.UserAccount;
    Event[] observableHiddenEvents = Model[EventState.Hidden].Where(e => DatabaseHelpers.Events.CanViewHiddenEvent(currentUser, e)).ToArray();

    bool showActiveEvents = (Model[EventState.Ongoing].Count() + Model[EventState.Voting].Count()) > 0;
    bool showPlannedEvents = Model[EventState.Revealed].Count() > 0 || observableHiddenEvents.Length > 0;
    bool showClosedEvents = Model[EventState.Closed].Count() > 0;
}

@if (currentUser.Permissions.HasFlag(GlobalPermissions.CreateEvents))
{
    <div>
        <a class="button" asp-controller="events" asp-action="new">Create an event</a>
    </div>
}

<div class="events">
    @if (showActiveEvents)
    {
        <div class="events-active">
            <h1>Active events</h1>
            <div class="event-container">
                @foreach (Event e in Model[EventState.Ongoing].Concat(Model[EventState.Voting]))
                {
                    <partial name="_EventInfo" for="@e" />
                }
            </div>
        </div>
    }
    @if (showActiveEvents && showPlannedEvents)
    {
        <hr>
    }
    @if (showPlannedEvents)
    {
        <div class="events-planned">
            <h1>Planned events</h1>
            <div class="event-container">
                @foreach (Event e in observableHiddenEvents)
                {
                    <partial name="_EventInfo" for="@e" />
                }
                @foreach (Event e in Model[EventState.Revealed])
                {
                    <partial name="_EventInfo" for="@e" />
                }
            </div>
        </div>
    }
    @if (showPlannedEvents && showClosedEvents)
    {
        <hr>
    }
    @if (showClosedEvents)
    {
        <div class="events-finished">
            <h1>Finished events</h1>
            <div class="event-container">
                @foreach (Event e in Model[EventState.Closed])
                {
                    <partial name="_EventInfo" for="@e" />
                }
            </div>
        </div>
    }
</div>